package com.css.mgr.admin.ctrl.dict;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.css.mgr.admin.srv.dict.IDictService;
import com.css.mgr.base.CssController;

@Controller
@RequestMapping("/dict")
public class DictController extends CssController{
	private final Logger logger = LoggerFactory.getLogger(this.getClass());  
	
	@Autowired
	private IDictService dictService;
	
	@RequestMapping(value="/dir",method=RequestMethod.GET)
	public String dir(){
		logger.info(">>>>>>user:"+getUser().getRealName());
		return "admin/sys/dir";
	}


	/*@RequestMapping(value="/queryAll",method=RequestMethod.GET)
	@ResponseBody
	public Map<Object,Object> query(HttpServletRequest request) {
		@SuppressWarnings("unused")
		Set<String> keySet = request.getParameterMap().keySet();
		Direction orderDir = Direction.ASC; 
		String columnName = "uuid";
		int draw = Integer.parseInt(request.getParameter("draw"));//请求次数
		int start = Integer.parseInt(request.getParameter("start"));//数据起始位置
		int length = Integer.parseInt(request.getParameter("length"));//数据长度
		String order = request.getParameter("order[0][column]");//获取需要排序的字段索引
		String dir = request.getParameter("order[0][dir]");//获取需要排序字段的排序方向
		String column = request.getParameter("columns["+order+"][data]");//根据索引获取字段名称
	    String searchValue = request.getParameter("search[value]");//获取用户过滤框里的字符
	    String uuid = request.getParameter("uuid");
	    String name = request.getParameter("name");
	    
	    JSONObject paramJson = new JSONObject();
	    paramJson.put("uuid", uuid);
	    paramJson.put("name", name);
	    logger.info("paramJson:"+paramJson);
	    if(IDUtil.isNotEmpty(dir) && !dir.equals("asc")) {
			orderDir = Direction.DESC;
		}
		if(column!=null && column != "") {
			columnName = column;
		}
		 //总记录数
	    String recordsTotal = "0";
	    //过滤后记录数
	    String recordsFiltered = "";
	    int page = start / length;
	    Sort sort = new Sort(orderDir, columnName);
	    Pageable pageable = new PageRequest(page,length,sort);
	    
	    Page<SSys> sSysPageAll = sysService.findAll(paramJson,pageable);
	    
	    Page<SSys> postPageFiltered = sysService.listSerach(paramJson,searchValue, pageable);
	    
		if(sSysPageAll!=null && sSysPageAll.getTotalElements()>0) {
			logger.info(">>>>>>postPageAll:"+sSysPageAll.getTotalElements());
			recordsTotal = String.valueOf(sSysPageAll.getTotalElements());
		}
		if(postPageFiltered!=null && postPageFiltered.getTotalElements()>0) {
			logger.info(">>>>>>postPageFiltered:"+postPageFiltered.getTotalElements());
			recordsFiltered = String.valueOf(postPageFiltered.getTotalElements());
		}
		Map<Object,Object> pageInfo = new HashMap<Object,Object>();
		pageInfo.put("data", postPageFiltered.getContent());
		pageInfo.put("draw", draw);
		pageInfo.put("recordsTotal", recordsTotal);
		pageInfo.put("recordsFiltered", recordsFiltered);
		return pageInfo;
	}*/
 }
