/**
 * Copyrigth(c) Css Team
 * All rights reserved
 */
package com.css.mgr.admin.ctrl.file;

import java.io.File;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.css.mgr.admin.common.IDUtil;
import com.css.mgr.admin.dao.pojo.SFile;
import com.css.mgr.admin.srv.file.IFileService;
import com.css.mgr.base.CssController;

/**
 * @author wangtianwen
 * 2018年3月2日
 */
@Controller
@RequestMapping("/file")
public class FileController extends CssController{
	private final Logger logger = LoggerFactory.getLogger(this.getClass());
	

	@Value("${file.local.dir}")
	private String fileLocaldir;
	
	@Autowired
	private IFileService fileService;
	
	@RequestMapping(value="/upload",method=RequestMethod.POST)
	@ResponseBody
	public String upload(MultipartFile file,HttpServletRequest request) {
		String fileBusinessType = request.getParameter("fileBusinessType");
		String bId = request.getParameter("bId");
		logger.info("uploadfile:"+file);
		logger.info("fileBusinessType:"+fileBusinessType);
		logger.info("bId:"+bId);
		StringBuilder fileUuid = new StringBuilder();
		if (!file.isEmpty()) {  
            try {  
                // 文件保存路径  
                String filePath = fileLocaldir + File.separator + fileBusinessType + File.separator + file.getOriginalFilename();
                File f = new File(filePath);
                // 转存文件  
                file.transferTo(f); 
               
                SFile attach = new SFile();
	       		attach.setUuid(IDUtil.getId());
	       		attach.setName(file.getOriginalFilename());
	       		attach.setbId(bId);
	       		attach.setFileBusinessType(fileBusinessType);
	       		attach.setUrl(fileBusinessType + File.separator + file.getOriginalFilename());
	       		attach.setUploadTime(new Date());
	       		attach.setUserId(super.getUser().getUuid());
	       		attach.setUserName(super.getUser().getLoginName());
	       		attach.setFileSize(String.valueOf(file.getSize()));
	       		attach.setExtName(file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(".")));
	       		fileUuid.append(fileService.saveDB(attach));
            } catch (Exception e) {  
                e.printStackTrace();  
            }  
        }  
		return fileUuid.toString();
	}
	
	@ResponseBody
	@RequestMapping(value="/del",method=RequestMethod.POST)
	public String del(String sfileUuid) {
		return fileService.delFile(sfileUuid).toString();
	}
	
	@ResponseBody
	@RequestMapping(value="/list",method=RequestMethod.GET)
	public String list(String bId,String fileBusinessType) {
		return fileService.listFile(bId,fileBusinessType).toString();
	}
}
